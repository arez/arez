package org.realityforge.arez.api2;

import java.io.PrintWriter;
import java.io.StringWriter;
import java.util.function.Supplier;
import javax.annotation.Nonnull;

/**
 * A place to store utility methods that should not be used outside this package.
 */
final class ArezUtil
{
  private ArezUtil()
  {
  }

  /**
   * Return the string generated by specified supplier.
   * Typically this is used to delay instantiation of an error message until it is required.
   * If the supplier generates an exception then catch it and generate an explanatory message.
   *
   * @param message the string supplier to generate message.
   * @return the string generated by supplier.
   */
  @Nonnull
  static String safeGetString( @Nonnull final Supplier<String> message )
  {
    try
    {
      return message.get();
    }
    catch ( final Throwable t )
    {
      return "Exception generated whilst attempting to get supplied message.\n" + throwableToString( t );
    }
  }

  /**
   * Return string converted to stack trace.
   *
   * @param t the throwable to convert
   * @return the stack trace.
   */
  @Nonnull
  static String throwableToString( @Nonnull final Throwable t )
  {
    final StringWriter out = new StringWriter();
    t.printStackTrace( new PrintWriter( out ) );
    return out.toString();
  }
}
